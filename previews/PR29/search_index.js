var documenterSearchIndex = {"docs":
[{"location":"api_reference/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api_reference/#Fugl.ButtonState","page":"API Reference","title":"Fugl.ButtonState","text":"Enum representing the state of a mouse button.\n\nIsReleased: The button is currently released.\nIsPressed: The button is currently pressed.\n\n\n\n\n\n","category":"type"},{"location":"api_reference/#Fugl.MouseButton","page":"API Reference","title":"Fugl.MouseButton","text":"Enum representing the different mouse buttons.\n\nLeftButton: The left mouse button.\nRightButton: The right mouse button.\nMiddleButton: The middle mouse button (scroll button).\n\n\n\n\n\n","category":"type"},{"location":"api_reference/#Fugl.SizedView","page":"API Reference","title":"Fugl.SizedView","text":"Abstract type for views that have constrained/intrinsic sizing behavior. These views know their preferred dimensions and can be used with alignment components. Examples: IntrinsicSize, FixedSize, IntrinsicWidth, IntrinsicHeight, etc.\n\n\n\n\n\n","category":"type"},{"location":"api_reference/#Fugl.AlignHorizontal","page":"API Reference","title":"Fugl.AlignHorizontal","text":"AlignHorizontal(child::SizedView, alignment::Symbol)\n\nAligns a sized child component horizontally within its container.\n\nArguments\n\nchild: A SizedView component that has intrinsic dimensions\nalignment: Horizontal alignment (:left, :center, :right)\n\nExample\n\nAlignHorizontal(IntrinsicSize(Image(\"logo.png\")), :left)\nAlignHorizontal(FixedSize(Text(\"Hello\"), 100.0f0, 50.0f0), :right)\n\n\n\n\n\n","category":"function"},{"location":"api_reference/#Fugl.AlignVertical","page":"API Reference","title":"Fugl.AlignVertical","text":"AlignVertical(child::SizedView, alignment::Symbol)\n\nAligns a sized child component vertically within its container.\n\nArguments\n\nchild: A SizedView component that has intrinsic dimensions\nalignment: Vertical alignment (:top, :center, :bottom)\n\nExample\n\nAlignVertical(IntrinsicSize(Image(\"logo.png\")), :top)\nAlignVertical(FixedSize(Text(\"Hello\"), 100.0f0, 50.0f0), :center)\n\n\n\n\n\n","category":"function"},{"location":"api_reference/#Fugl.Container","page":"API Reference","title":"Fugl.Container","text":"The Container is the most basic GUI component that can contain another component. It is the most basic building block of the GUI system.\n\n\n\n\n\n","category":"function"},{"location":"api_reference/#Fugl.FixedSize-Tuple{AbstractView, Real, Real}","page":"API Reference","title":"Fugl.FixedSize","text":"FixedSize(child::AbstractView, width::Real, height::Real)\n\nCreates a view that has a fixed size, regardless of the child's intrinsic size. The child will be rendered at the specified width and height.\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#Fugl.IconButton-Tuple{String}","page":"API Reference","title":"Fugl.IconButton","text":"A button consisting of the icon only.\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#Fugl.IntrinsicSize","page":"API Reference","title":"Fugl.IntrinsicSize","text":"IntrinsicSize(child::AbstractView=EmptyView())\n\nThe IntrinsicSize component is used to wrap a child view and ensure that it uses its intrinsic size for layout. This is useful for components that should not stretch to fill their parent container, but rather use their natural size.\n\n\n\n\n\n","category":"function"},{"location":"api_reference/#Fugl.TextButton-Tuple{String}","page":"API Reference","title":"Fugl.TextButton","text":"A button containing text only.\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#Fugl.apply_layout-Tuple{AbstractView}","page":"API Reference","title":"Fugl.apply_layout","text":"apply_layout(component::AbstractView)\n\nApply layout to a GUI component and its children. This function calculates and applies the layout to components. The interpret_view function then uses the positions and sizes calculated by this function.\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#Fugl.draw_closed_lines-Tuple{Vector{GeometryBasics.Point{2, Float32}}, GeometryBasics.Vec4{<:AbstractFloat}}","page":"API Reference","title":"Fugl.draw_closed_lines","text":"draw_closed_lines(vertices::Vector{Point2f}, color_rgba::Vec4{<:AbstractFloat})\n\nDraw closed lines using the provided vertices and color.\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#Fugl.draw_rectangle-Tuple{Vector{GeometryBasics.Point{2, Float32}}, GeometryBasics.Vec4{<:AbstractFloat}, StaticArraysCore.SMatrix{4, 4, Float32, 16}}","page":"API Reference","title":"Fugl.draw_rectangle","text":"draw_rectangle(vertices::Vector{Point2f}, color_rgba::Vec4{<:AbstractFloat}, projection_matrix::Mat4{Float32})\n\nDraw a rectangle using the provided vertices and color.\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#Fugl.draw_rounded_rectangle-Tuple{Vector{GeometryBasics.Point{2, Float32}}, Float32, Float32, GeometryBasics.Vec4{<:AbstractFloat}, GeometryBasics.Vec4{<:AbstractFloat}, Float32, Float32, StaticArraysCore.SMatrix{4, 4, Float32, 16}}","page":"API Reference","title":"Fugl.draw_rounded_rectangle","text":"draw_rounded_rectangle(\n    vertices::Vector{Point2f},\n    width::Float32, height::Float32,\n    fill_color_rgba::Vec4{<:AbstractFloat}, border_color_rgba::Vec4{<:AbstractFloat},\n    border_width::Float32, radius::Float32,\n    projection_matrix::Mat4{Float32}\n)\n\nDraw a rounded rectangle with border using the custom shader.\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#Fugl.generate_rectangle_vertices-NTuple{4, Any}","page":"API Reference","title":"Fugl.generate_rectangle_vertices","text":"generate_rectangle_vertices(x, y, width, height)\n\nFunction to generate a rectangle with specified position and size in pixel coordinates.\n\nThis function creates a rectangle defined by its top-left corner (x, y), width, and height.\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#Fugl.get_orthographic_matrix-Union{Tuple{T}, NTuple{6, T}} where T<:Real","page":"API Reference","title":"Fugl.get_orthographic_matrix","text":"get_orthographic_matrix(left::T, right::T, bottom::T, top::T, near::T, far::T)::Matrix{T} where {T<:Real}\n\nCreate an orthographic projection matrix.\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#Fugl.initialize_shaders-Tuple{}","page":"API Reference","title":"Fugl.initialize_shaders","text":"Initialize the shader program (must be called after OpenGL context is created)\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#Fugl.interpret_view-Tuple{AbstractView, Float32, Float32, Float32, Float32, StaticArraysCore.SMatrix{4, 4, Float32, 16}}","page":"API Reference","title":"Fugl.interpret_view","text":"interpret_view(component::AbstractView, x::Float32, y::Float32, width::Float32, height::Float32, projection_matrix::Mat4{Float32})\n\nInterpret the view of a GUI component. This function is responsible for interpreting the view of a GUI component based on its layout and properties.\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#Fugl.run-Tuple{Function}","page":"API Reference","title":"Fugl.run","text":"run(ui_ref[]::AbstractView; title::String=\"Fugl\", window_width_px::Integer=1920, window_height_px::Integer=1080)\n\nRun the main loop for the GUI application. This function handles the rendering and event processing for the GUI.\n\n\n\n\n\n","category":"method"},{"location":"Components/container/#Container","page":"Container","title":"Container","text":"","category":"section"},{"location":"Components/container/","page":"Container","title":"Container","text":"The most basic UI component.","category":"page"},{"location":"Components/container/","page":"Container","title":"Container","text":"using Fugl\n\nfunction MyApp()\n    Container()\nend\n\nscreenshot(MyApp, \"container.png\", 400, 300);\nnothing #hide","category":"page"},{"location":"Components/container/","page":"Container","title":"Container","text":"(Image: Container)","category":"page"},{"location":"Components/container/","page":"Container","title":"Container","text":"You can add a child component to a cointainer, as such:","category":"page"},{"location":"Components/container/","page":"Container","title":"Container","text":"using Fugl\n\nfunction MyApp()\n    Container(\n        Container()\n    )\nend\n\nscreenshot(MyApp, \"container_child.png\", 400, 300);\nnothing #hide","category":"page"},{"location":"Components/container/","page":"Container","title":"Container","text":"(Image: Container)","category":"page"},{"location":"Components/text_button/#Text-Buttons","page":"Text Buttons","title":"Text Buttons","text":"","category":"section"},{"location":"Components/text_button/","page":"Text Buttons","title":"Text Buttons","text":"using Fugl\n\nfunction MyApp()\n    Container(\n        TextButton(\"Some Text\", on_click=() -> println(\"Clicked\"))\n    )\nend\n\nscreenshot(MyApp, \"textButton.png\", 400, 150);\nnothing #hide","category":"page"},{"location":"Components/text_button/","page":"Text Buttons","title":"Text Buttons","text":"(Image: Text Button)","category":"page"},{"location":"Components/text_box/#TextBox","page":"TextBox","title":"TextBox","text":"","category":"section"},{"location":"Components/text_box/","page":"TextBox","title":"TextBox","text":"using Fugl\n\ntext_state = Ref(\"Enter text here...\")\nis_focused = Ref(false)\n\nfunction MyApp()\n    Container(\n        TextBox(text_state[], is_focused[];\n            on_change=(text) -> (text_state[] = text),\n            on_focus_change=(focused) -> (is_focused[] = focused)\n        )\n    )\nend\n\nscreenshot(MyApp, \"textBox.png\", 400, 150);\nnothing #hide","category":"page"},{"location":"Components/text_box/","page":"TextBox","title":"TextBox","text":"(Image: Text Box)","category":"page"},{"location":"interaction/#User-interaction","page":"User interaction","title":"User interaction","text":"","category":"section"},{"location":"interaction/","page":"User interaction","title":"User interaction","text":"using Fugl\n\nfunction MyApp()\n    Container( on_click=() -> println(\"Clicked\") )\nend\nnothing #hide","category":"page"},{"location":"interaction/","page":"User interaction","title":"User interaction","text":"using Fugl\n\nfunction MyApp()\n    Container(\n        TextButton(\"Some Text\", on_click=() -> println(\"Clicked\"))\n    )\nend\nnothing #hide","category":"page"},{"location":"interaction/","page":"User interaction","title":"User interaction","text":"using Fugl\n\n# Ref for maintining the slider state\nslider_value = Ref(0.5f0)\n\nfunction MyApp()\n    Container(\n        HorizontalSlider(\n            slider_value[],\n            0.0f0,              # min value\n            1.0f0;              # max value\n            on_change=(new_value) -> (slider_value[] = new_value)\n        )\n    )\nend\n\nnothing #hide","category":"page"},{"location":"Components/image/#Image","page":"Image","title":"Image","text":"","category":"section"},{"location":"Components/image/","page":"Image","title":"Image","text":"using Fugl\n\nfunction MyApp()\n    Container(Image(\"\"))\nend\n\nscreenshot(MyApp, \"missing_image.png\", 400, 300);\nnothing #hide","category":"page"},{"location":"Components/image/","page":"Image","title":"Image","text":"(Image: Image component)","category":"page"},{"location":"Components/layout/#Layout","page":"Layout","title":"Layout","text":"","category":"section"},{"location":"Components/layout/#Column","page":"Layout","title":"Column","text":"","category":"section"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"Column is a component for creating linear layout.","category":"page"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"using Fugl\n\nfunction MyApp()\n    Column([\n        Container(),\n        Container(),\n        Container(),\n    ])\nend\n\nscreenshot(MyApp, \"column.png\", 400, 300);\nnothing #hide","category":"page"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"(Image: Column example)","category":"page"},{"location":"Components/layout/#Row","page":"Layout","title":"Row","text":"","category":"section"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"Row is a component for creating linear layout.","category":"page"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"using Fugl\n\nfunction MyApp()\n    Row([\n        Container(),\n        Container(),\n        Container(),\n    ])\nend\n\nscreenshot(MyApp, \"row.png\", 400, 300);\nnothing #hide","category":"page"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"(Image: Row example)","category":"page"},{"location":"Components/layout/#Sizing","page":"Layout","title":"Sizing","text":"","category":"section"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"using Fugl\nusing Fugl: Text\n\nfunction MyApp()\n    Column([\n        IntrinsicWidth(Container(Text(\"IntrinsicWidth\"))),\n        IntrinsicSize(Container(Text(\"IntrinsicSize\"))),\n        IntrinsicHeight(Container(Text(\"IntrinsicHeight\"))),\n    ])\nend\n\nscreenshot(MyApp, \"intrinsic_sizing.png\", 400, 300);\nnothing #hide","category":"page"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"(Image: Intrinsic sizing example)","category":"page"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"using Fugl\nusing Fugl: Text\n\nfunction MyApp()\n    Column([\n        FixedSize(Container(), 400, 50),\n        FixedSize(Container(), 400, 50),\n        FixedSize(Container(), 400, 50),\n    ])\nend\n\nscreenshot(MyApp, \"fixed_sizing.png\", 400, 300);\nnothing #hide","category":"page"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"(Image: Fixed sizing example)","category":"page"},{"location":"Components/layout/#IntrinsicColumn","page":"Layout","title":"IntrinsicColumn","text":"","category":"section"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"using Fugl\nusing Fugl: Text\n\nfunction MyApp()\n    IntrinsicColumn([\n        FixedSize(Container(Text(\"Clipping width\")), 800, 50),\n        FixedSize(Container(), 400, 50),\n        FixedSize(Container(), 200, 50),\n    ])\nend\n\nscreenshot(MyApp, \"intrinsic_column.png\", 400, 300);\nnothing #hide","category":"page"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"(Image: Intrinsic Column)","category":"page"},{"location":"Components/layout/#IntrinsicRow","page":"Layout","title":"IntrinsicRow","text":"","category":"section"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"using Fugl\nusing Fugl: Text\n\nfunction MyApp()\n    IntrinsicRow([\n        FixedSize(Container(Text(\"Clipping Height\")), 50, 800),\n        FixedSize(Container(), 50, 400),\n        FixedSize(Container(), 50, 200),\n    ])\nend\n\nscreenshot(MyApp, \"intrinsic_row.png\", 400, 300);\nnothing #hide","category":"page"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"(Image: Intrinsic row)","category":"page"},{"location":"Components/layout/#Alignment","page":"Layout","title":"Alignment","text":"","category":"section"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"The alignment components allow you to position sized components within their containers.","category":"page"},{"location":"Components/layout/#Horizontal-Alignment","page":"Layout","title":"Horizontal Alignment","text":"","category":"section"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"using Fugl\nusing Fugl: Text\n\nfunction MyApp()\n    Column([\n        AlignHorizontal(FixedSize(Container(Text(\"Left\")), 100, 50), :left),\n        AlignHorizontal(FixedSize(Container(Text(\"Center\")), 100, 50), :center),\n        AlignHorizontal(FixedSize(Container(Text(\"Right\")), 100, 50), :right),\n    ])\nend\n\nscreenshot(MyApp, \"horizontal_alignment.png\", 400, 300);\nnothing #hide","category":"page"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"(Image: Horizontal alignment example)","category":"page"},{"location":"Components/layout/#Vertical-Alignment","page":"Layout","title":"Vertical Alignment","text":"","category":"section"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"using Fugl\nusing Fugl: Text\n\nfunction MyApp()\n    Row([\n        AlignVertical(IntrinsicSize(Container(Text(\"Top\"))), :top),\n        AlignVertical(IntrinsicSize(Container(Text(\"Center\"))), :center),\n        AlignVertical(IntrinsicSize(Container(Text(\"Bottom\"))), :bottom),\n    ])\nend\n\nscreenshot(MyApp, \"vertical_alignment.png\", 400, 300);\nnothing #hide","category":"page"},{"location":"Components/layout/","page":"Layout","title":"Layout","text":"(Image: Vertical alignment example)","category":"page"},{"location":"#Fugl.jl","page":"Fugl.jl","title":"Fugl.jl","text":"","category":"section"},{"location":"","page":"Fugl.jl","title":"Fugl.jl","text":"Fugl.jl is a funcitonal GUI library written in Julia using OpenGL.","category":"page"},{"location":"","page":"Fugl.jl","title":"Fugl.jl","text":"It is intended to be a simple library with few depencdencies, suitable for making scientific applications.","category":"page"},{"location":"","page":"Fugl.jl","title":"Fugl.jl","text":"It is very mutch a work-in-progress.","category":"page"},{"location":"Components/slider/#Sliders","page":"Sliders","title":"Sliders","text":"","category":"section"},{"location":"Components/slider/","page":"Sliders","title":"Sliders","text":"using Fugl\n\n# Ref for maintining the slider state\nslider_value = Ref(0.5f0)\n\nfunction MyApp()\n    Container(\n        HorizontalSlider(\n            slider_value[],\n            0.0f0,              # min value\n            1.0f0;              # max value\n            on_change=(new_value) -> (slider_value[] = new_value)\n        )\n    )\nend\n\nscreenshot(MyApp, \"horizontal_slider.png\", 400, 100);\nnothing #hide","category":"page"},{"location":"Components/slider/","page":"Sliders","title":"Sliders","text":"(Image: Horizontal slider example)","category":"page"},{"location":"Components/text/#Text","page":"Text","title":"Text","text":"","category":"section"},{"location":"Components/text/","page":"Text","title":"Text","text":"using Fugl\nusing Fugl: Text\n\nfunction MyApp()\n    Container(\n        Text(\"Some Text\")\n    )\nend\n\nscreenshot(MyApp, \"text.png\", 400, 150);\nnothing #hide","category":"page"},{"location":"Components/text/","page":"Text","title":"Text","text":"(Image: Text)","category":"page"},{"location":"Components/text/#Wrapping","page":"Text","title":"Wrapping","text":"","category":"section"},{"location":"Components/text/","page":"Text","title":"Text","text":"The Text component support wrapping by default.","category":"page"},{"location":"Components/text/","page":"Text","title":"Text","text":"using Fugl\nusing Fugl: Text\n\nfunction MyApp()\n    Container(\n        Text(\"Some strings may be too long to fit, and must be drawn over multiple lines.\")\n    )\nend\n\nscreenshot(MyApp, \"text_wrap.png\", 400, 150);\nnothing #hide","category":"page"},{"location":"Components/text/","page":"Text","title":"Text","text":"(Image: Text wrapping)","category":"page"},{"location":"Components/text/#Horizontal-Alignement","page":"Text","title":"Horizontal Alignement","text":"","category":"section"},{"location":"Components/text/","page":"Text","title":"Text","text":"using Fugl\nusing Fugl: Text\n\nfunction MyApp()\n    Container(\n        Column([\n            Text(\"Align left\",   horizontal_align=:left), \n            Text(\"Align center\", horizontal_align=:center), \n            Text(\"Align right\",  horizontal_align=:right)\n        ])\n    )\nend\n\nscreenshot(MyApp, \"text_align.png\", 400, 150);\nnothing #hide","category":"page"},{"location":"Components/text/","page":"Text","title":"Text","text":"(Image: Text horizontal alignement)","category":"page"},{"location":"Components/text/#Vertical-Alignement","page":"Text","title":"Vertical Alignement","text":"","category":"section"},{"location":"Components/text/","page":"Text","title":"Text","text":"using Fugl\nusing Fugl: Text\n\nfunction MyApp()\n    Container(\n        Column([\n            Text(\"Align top\",    vertical_align=:top), \n            Text(\"Align middle\", vertical_align=:middle), \n            Text(\"Align bottom\", vertical_align=:bottom)\n        ])\n    )\nend\n\nscreenshot(MyApp, \"text_vertical_align.png\", 400, 150);\nnothing #hide","category":"page"},{"location":"Components/text/","page":"Text","title":"Text","text":"(Image: Text vertical alignment)","category":"page"}]
}
